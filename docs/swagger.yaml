basePath: /api/v1
definitions:
  support-app-backend_internal_models.ChangePasswordRequest:
    description: Request payload for changing user password
    properties:
      current_password:
        description: Current password
        example: oldPassword123
        type: string
      new_password:
        description: New password (min 8 characters)
        example: newPassword123
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
  support-app-backend_internal_models.CreateSupportRequestRequest:
    description: Request payload for creating a new support request
    properties:
      app:
        description: Application name
        example: my-awesome-app
        type: string
      app_version:
        description: Application version
        example: 1.2.3
        type: string
      device_model:
        description: Device model
        example: iPhone 14 Pro
        type: string
      message:
        description: Support request message
        example: I'm having trouble with the login feature
        type: string
      platform:
        allOf:
        - $ref: '#/definitions/support-app-backend_internal_models.Platform'
        description: Platform (iOS, Android, or Web)
        enum:
        - iOS
        - Android
        - Web
        example: iOS
      type:
        allOf:
        - $ref: '#/definitions/support-app-backend_internal_models.SupportRequestType'
        description: Type of request (support, feedback, bug_report, or feature_request)
        enum:
        - support
        - feedback
        - bug_report
        - feature_request
        example: support
      user_email:
        description: Optional user email
        example: user@example.com
        type: string
    required:
    - app
    - app_version
    - device_model
    - message
    - platform
    - type
    type: object
  support-app-backend_internal_models.CreateUserRequest:
    description: Request payload for creating a new user
    properties:
      email:
        description: Valid email address
        example: newuser@example.com
        type: string
      password:
        description: Password (min 8 characters)
        example: securePassword@123
        minLength: 8
        type: string
      role:
        allOf:
        - $ref: '#/definitions/support-app-backend_internal_models.UserRole'
        description: User role (admin or user)
        enum:
        - admin
        - user
        example: user
      username:
        description: Username (3-50 characters)
        example: newuser
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  support-app-backend_internal_models.LoginRequest:
    description: User login request
    properties:
      password:
        description: Password for login
        example: securePassword@123
        type: string
      username:
        description: Username for login
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  support-app-backend_internal_models.Platform:
    enum:
    - iOS
    - Android
    - Web
    type: string
    x-enum-varnames:
    - PlatformIOS
    - PlatformAndroid
    - PlatformWeb
  support-app-backend_internal_models.Status:
    enum:
    - new
    - in_progress
    - resolved
    type: string
    x-enum-varnames:
    - StatusNew
    - StatusInProgress
    - StatusResolved
  support-app-backend_internal_models.SupportRequestType:
    enum:
    - support
    - feedback
    - bug_report
    - feature_request
    type: string
    x-enum-varnames:
    - SupportRequestTypeSupport
    - SupportRequestTypeFeedback
    - SupportRequestTypeBugReport
    - SupportRequestTypeFeatureRequest
  support-app-backend_internal_models.UpdateSupportRequestRequest:
    description: Request payload for updating support request status and admin notes
    properties:
      admin_notes:
        description: Admin notes
        example: Contacted user for more details
        type: string
      status:
        allOf:
        - $ref: '#/definitions/support-app-backend_internal_models.Status'
        description: New status
        enum:
        - new
        - in_progress
        - resolved
        example: in_progress
    type: object
  support-app-backend_internal_models.UpdateUserRequest:
    description: Request payload for updating user information
    properties:
      email:
        description: New email address
        example: updated@example.com
        type: string
      is_active:
        description: Active status
        example: false
        type: boolean
      role:
        allOf:
        - $ref: '#/definitions/support-app-backend_internal_models.UserRole'
        description: New user role
        enum:
        - admin
        - user
        example: admin
    type: object
  support-app-backend_internal_models.UserRole:
    enum:
    - admin
    - user
    type: string
    x-enum-varnames:
    - UserRoleAdmin
    - UserRoleUser
host: localhost:8080
info:
  contact:
    email: support@support-app.io
    name: API Support
    url: http://www.support-app.io/support
  description: RESTful API for support tickets management with authentication and
    authorization
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Support App Backend API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - Authentication
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: Current user profile
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - Authentication
  /auth/password:
    patch:
      consumes:
      - application/json
      description: Change current user's password (requires authentication)
      parameters:
      - description: Password change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized or incorrect current password
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - Authentication
  /auth/users:
    get:
      consumes:
      - application/json
      description: Get paginated list of all users (requires admin authentication)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users list
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get all users (Admin only)
      tags:
      - User Management
    post:
      consumes:
      - application/json
      description: Create a new user account (requires admin authentication)
      parameters:
      - description: User creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create new user (Admin only)
      tags:
      - User Management
  /auth/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user account (requires admin authentication)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: User deleted successfully
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete user (Admin only)
      tags:
      - User Management
    get:
      consumes:
      - application/json
      description: Get user details by ID (requires admin authentication)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID (Admin only)
      tags:
      - User Management
    patch:
      consumes:
      - application/json
      description: Update user details (requires admin authentication)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update user (Admin only)
      tags:
      - User Management
  /support-request:
    post:
      consumes:
      - application/json
      description: Create a new support request (public endpoint with rate limiting)
      parameters:
      - description: Support request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.CreateSupportRequestRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Support request created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties: true
            type: object
      summary: Create support request
      tags:
      - Support Requests
  /support-requests:
    get:
      consumes:
      - application/json
      description: Get paginated list of all support requests (public endpoint)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Support requests list
          schema:
            additionalProperties: true
            type: object
      summary: Get all support requests
      tags:
      - Support Requests
  /support-requests/{id}:
    delete:
      consumes:
      - application/json
      description: Delete support request (requires admin authentication)
      parameters:
      - description: Support Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Support request deleted successfully
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Support request not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete support request (Admin only)
      tags:
      - Support Requests
    get:
      consumes:
      - application/json
      description: Get support request details by ID (public endpoint)
      parameters:
      - description: Support Request ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Support request details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Support request not found
          schema:
            additionalProperties: true
            type: object
      summary: Get support request by ID
      tags:
      - Support Requests
    patch:
      consumes:
      - application/json
      description: Update support request details (requires admin authentication)
      parameters:
      - description: Support Request ID
        in: path
        name: id
        required: true
        type: integer
      - description: Support request update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/support-app-backend_internal_models.UpdateSupportRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Support request updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - Admin access required
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Support request not found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update support request (Admin only)
      tags:
      - Support Requests
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
