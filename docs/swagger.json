{
    "swagger": "2.0",
    "info": {
        "description": "RESTful API for support tickets management with authentication and authorization",
        "title": "Support App Backend API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.support-app.io/support",
            "email": "support@support-app.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "Current user profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/password": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change current user's password (requires authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized or incorrect current password",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of all users (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user account (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Create new user (Admin only)",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user details by ID (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get user by ID (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete user account (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user details (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Update user (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the service is running and healthy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/support-request": {
            "post": {
                "description": "Create a new support request (public endpoint with rate limiting)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support Requests"
                ],
                "summary": "Create support request",
                "parameters": [
                    {
                        "description": "Support request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.CreateSupportRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Support request created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/support-requests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of all support requests (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support Requests"
                ],
                "summary": "Get all support requests (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support requests list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/support-requests/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get support request details by ID (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support Requests"
                ],
                "summary": "Get support request by ID (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support request details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Support request not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete support request (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support Requests"
                ],
                "summary": "Delete support request (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Support request deleted successfully"
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Support request not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update support request details (requires admin authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support Requests"
                ],
                "summary": "Update support request (Admin only)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Support Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Support request update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/support-app-backend_internal_models.UpdateSupportRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support request updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Support request not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "support-app-backend_internal_models.ChangePasswordRequest": {
            "description": "Request payload for changing user password",
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "description": "Current password",
                    "type": "string",
                    "example": "oldPassword123"
                },
                "new_password": {
                    "description": "New password (min 8 characters)",
                    "type": "string",
                    "minLength": 8,
                    "example": "newPassword123"
                }
            }
        },
        "support-app-backend_internal_models.CreateSupportRequestRequest": {
            "description": "Request payload for creating a new support request",
            "type": "object",
            "required": [
                "app",
                "app_version",
                "device_model",
                "message",
                "platform",
                "type"
            ],
            "properties": {
                "app": {
                    "description": "Application name",
                    "type": "string",
                    "example": "my-awesome-app"
                },
                "app_version": {
                    "description": "Application version",
                    "type": "string",
                    "example": "1.2.3"
                },
                "device_model": {
                    "description": "Device model",
                    "type": "string",
                    "example": "iPhone 14 Pro"
                },
                "message": {
                    "description": "Support request message",
                    "type": "string",
                    "example": "I'm having trouble with the login feature"
                },
                "platform": {
                    "description": "Mobile platform",
                    "enum": [
                        "iOS",
                        "Android"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/support-app-backend_internal_models.Platform"
                        }
                    ],
                    "example": "iOS"
                },
                "type": {
                    "description": "Type of request (support or feedback)",
                    "enum": [
                        "support",
                        "feedback"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/support-app-backend_internal_models.SupportRequestType"
                        }
                    ],
                    "example": "support"
                },
                "user_email": {
                    "description": "Optional user email",
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "support-app-backend_internal_models.CreateUserRequest": {
            "description": "Request payload for creating a new user",
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Valid email address",
                    "type": "string",
                    "example": "newuser@example.com"
                },
                "password": {
                    "description": "Password (min 8 characters)",
                    "type": "string",
                    "minLength": 8,
                    "example": "securePassword@123"
                },
                "role": {
                    "description": "User role (admin or user)",
                    "enum": [
                        "admin",
                        "user"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/support-app-backend_internal_models.UserRole"
                        }
                    ],
                    "example": "user"
                },
                "username": {
                    "description": "Username (3-50 characters)",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "newuser"
                }
            }
        },
        "support-app-backend_internal_models.LoginRequest": {
            "description": "User login request",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password for login",
                    "type": "string",
                    "example": "securePassword@123"
                },
                "username": {
                    "description": "Username for login",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "support-app-backend_internal_models.Platform": {
            "type": "string",
            "enum": [
                "iOS",
                "Android"
            ],
            "x-enum-varnames": [
                "PlatformIOS",
                "PlatformAndroid"
            ]
        },
        "support-app-backend_internal_models.Status": {
            "type": "string",
            "enum": [
                "new",
                "in_progress",
                "resolved"
            ],
            "x-enum-varnames": [
                "StatusNew",
                "StatusInProgress",
                "StatusResolved"
            ]
        },
        "support-app-backend_internal_models.SupportRequestType": {
            "type": "string",
            "enum": [
                "support",
                "feedback"
            ],
            "x-enum-varnames": [
                "SupportRequestTypeSupport",
                "SupportRequestTypeFeedback"
            ]
        },
        "support-app-backend_internal_models.UpdateSupportRequestRequest": {
            "description": "Request payload for updating support request status and admin notes",
            "type": "object",
            "properties": {
                "admin_notes": {
                    "description": "Admin notes",
                    "type": "string",
                    "example": "Contacted user for more details"
                },
                "status": {
                    "description": "New status",
                    "enum": [
                        "new",
                        "in_progress",
                        "resolved"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/support-app-backend_internal_models.Status"
                        }
                    ],
                    "example": "in_progress"
                }
            }
        },
        "support-app-backend_internal_models.UpdateUserRequest": {
            "description": "Request payload for updating user information",
            "type": "object",
            "properties": {
                "email": {
                    "description": "New email address",
                    "type": "string",
                    "example": "updated@example.com"
                },
                "is_active": {
                    "description": "Active status",
                    "type": "boolean",
                    "example": false
                },
                "role": {
                    "description": "New user role",
                    "enum": [
                        "admin",
                        "user"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/support-app-backend_internal_models.UserRole"
                        }
                    ],
                    "example": "admin"
                }
            }
        },
        "support-app-backend_internal_models.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "UserRoleAdmin",
                "UserRoleUser"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}